########################################################
###datasource
########################################################
#spring.datasource.url = jdbc:mysql://74.82.194.5:3306/litemall?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC&verifyServerCertificate=false&useSSL=false
#spring.datasource.username = litemall
#spring.datasource.password = litemall123456
#spring.datasource.driverClassName = com.mysql.jdbc.Driver
#spring.datasource.tomcat.max-active=20
#spring.datasource.tomcat.max-idle=8
#spring.datasource.tomcat.min-idle=8
#spring.datasource.tomcat.initial-size=10

########################################################
### Java Persistence Api
########################################################
# Specify the DBMS
#spring.jpa.database-platform = MYSQL
## Show or not log for each sql query
#spring.jpa.show-sql = true
## Hibernate ddl auto (create, create-drop, update)
#spring.jpa.hibernate.ddl-auto = update
## Naming strategy
##spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
##spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy
## stripped before adding them to the entity manager)
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect



## THYMELEAF (ThymeleafAutoConfiguration)
##开启模板缓存（默认值：true）
#spring.thymeleaf.cache=true
##Check that the template exists before rendering it.
#spring.thymeleaf.check-template=true
##检查模板位置是否正确（默认值:true）
#spring.thymeleaf.check-template-location=true
##Content-Type的值（默认值：text/html）
#spring.thymeleaf.servlet.content-type = text/html
##开启MVC Thymeleaf视图解析（默认值：true）
#spring.thymeleaf.enabled=true
##模板编码
#spring.thymeleaf.encoding=UTF-8
##要被排除在解析之外的视图名称列表，用逗号分隔
#spring.thymeleaf.excluded-view-names=
##要运用于模板之上的模板模式。另见StandardTemplate-ModeHandlers(默认值：HTML5)
#spring.thymeleaf.mode=HTML5
##在构建URL时添加到视图名称前的前缀（默认值：classpath:/templates/）
#spring.thymeleaf.prefix=classpath:/templates/
##在构建URL时添加到视图名称后的后缀（默认值：.html）
#spring.thymeleaf.suffix=.html
##Thymeleaf模板解析器在解析器链中的顺序。默认情况下，它排第一位。顺序从1开始，只有在定义了额外的TemplateResolver Bean时才需要设置这个属性。
#spring.thymeleaf.template-resolver-order=
##可解析的视图名称列表，用逗号分隔
#spring.thymeleaf.view-names=index